#!/usr/bin/env bash

if [ -z "$1" ]
then
  echo "Please pass in your namespace. For example, \"./deploy.sh <my-namespace> <pipeline-selection>\""
  echo "    my-namespace (required) : provide namespace to deploy items"
  echo "    pipeline-selection (optional): pipeline - enterprise pipeline used for environment promotion between OpenShift clusters"
  echo "                                   If no option specified, builds only in provided sbx namespace"
  # Exit with "Invalid argument" return code.
  exit 22
fi

SOURCE_REPOSITORY_URL=$(git config --get remote.origin.url)
SOURCE_REPOSITORY_BRANCH=$(git rev-parse --abbrev-ref HEAD)
APPLICATION_NAME=springboot-rest-example
PIPELINE_SCRIPT=openjdk/spring-boot-rest-example/Jenkinsfile-sbx
NAMESPACE=${1}

echo "### Generated by deploy.sh DO NOT MODIFY ###
APPLICATION_NAME=${APPLICATION_NAME}
NAMESPACE=${NAMESPACE}
SOURCE_REPOSITORY_URL=${SOURCE_REPOSITORY_URL}
SOURCE_REPOSITORY_REF=${SOURCE_REPOSITORY_BRANCH}
PIPELINE_SCRIPT=${PIPELINE_SCRIPT}" > .openshift/params/build-sbx

echo "### Generated by deploy.sh DO NOT MODIFY ###
APPLICATION_NAME=${APPLICATION_NAME}
NAMESPACE=${NAMESPACE}
SA_NAME=jenkins
SA_NAMESPACE=${NAMESPACE}
READINESS_RESPONSE=\"content\":\"Hello, World!\"
READINESS_PATH=/
MEMORY_LIMIT=512Mi" > .openshift/params/deploy-sbx

echo "### Generated by deploy.sh DO NOT MODIFY ###
APPLICATION_NAME=${APPLICATION_NAME}
NAMESPACE=${NAMESPACE}" > .openshift/params/route-sbx

echo "filter_tags:
  - sbx #sandbox
  - pipeline #enterprise pipeline

openshift_cluster_content:
- object: deployments
  content:
  - name: \"deploy sbx environment\"
    template: \"{{ inventory_dir }}/../../.openshift/templates/deploy.yml\"
    params: \"{{ inventory_dir }}/../../.openshift/params/deploy-sbx\"
    tags:
      - sbx
- object: jenkins-delta
  content:
  - name: \"deploy delta jenkins image\"
    template: openshift//delta-jenkins-v3-11
    params: \"{{ inventory_dir }}/../../.openshift/params/delta-jenkins\"
    namespace: ${NAMESPACE}
    tags:
      - sbx
      - pipeline
- object: builds
  content:
  - name: \"deploy build to sandbox\"
    template: \"{{ inventory_dir }}/../../.openshift/templates/build.yml\"
    params: \"{{ inventory_dir }}/../../.openshift/params/build-sbx\"
    tags:
      - sbx
- object: builds
  content:
  -  name: \"deploy build pipeline to dev\"
     template: \"{{ inventory_dir }}/../../.openshift/templates/build.yml\"
     params: \"{{ inventory_dir }}/../../.openshift/params/build-dvl\"
     tags:
       - pipeline
- object: route
  content:
  - name: \"create route\"
    template: \"{{ inventory_dir }}/../../.openshift/templates/route.yml\"
    params: \"{{ inventory_dir }}/../../.openshift/params/route-sbx\"
    tags:
      - sbx
      - pipeline
" > .applier/inventory/group_vars/seed-hosts.yml

ansible-galaxy install -r .applier/requirements.yml --roles-path=galaxy

if [ "$2" = "pipeline" ]
then
    ansible-playbook -i .applier/inventory/ galaxy/openshift-applier/playbooks/openshift-cluster-seed.yml -e filter_tags=pipeline
    echo "Navigate to the OpenShift Console and watch your pipeline deployment."
elif [ -z $2 ]
then
    ansible-playbook -i .applier/inventory/ galaxy/openshift-applier/playbooks/openshift-cluster-seed.yml -e filter_tags=sbx
    echo "Navigate to the OpenShift Console and watch your sandbox deployment."
fi
